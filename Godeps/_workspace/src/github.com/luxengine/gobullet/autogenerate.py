goheader='''
package gobullet

/*
#include <bullet/Bullet-C-Api.h>
#cgo LDFLAGS: -lBulletSoftBody -lBulletCollision -lBulletDynamics -lLinearMath
*/
import "C"

import (
	"unsafe"
)
'''


constraintcommongo='''
//UNTESTED
func (this {2}) GetBreakingImpulseThreshold() float32 {{
	return float32(C.{0}GetBreakingImpulseThreshold(this.handle))
}}

//UNTESTED
func (this {2}) SetBreakingImpulseThreshold(threshold float32) {{
	C.{0}SetBreakingImpulseThreshold(this.handle, C.plReal(threshold))
}}

//UNTESTED
func (this {2}) IsEnabled() bool {{
	return bool(C.{0}IsEnabled(this.handle))
}}

//UNTESTED
func (this {2}) SetEnabled(enabled bool) {{
	C.{0}SetEnabled(this.handle, C.bool(enabled))
}}

//UNTESTED
func (this {2}) GetRigidBodyA() RigidBody {{
	return RigidBody{{C.{0}GetRigidBodyA(this.handle)}}
}}

//UNTESTED
func (this {2}) GetRigidBodyB() RigidBody {{
	return RigidBody{{C.{0}GetRigidBodyB(this.handle)}}
}}

//UNTESTED
func (this {2}) GetUserConstraintType() int {{
	return int(C.{0}GetUserConstraintType(this.handle))
}}

//UNTESTED
func (this {2}) SetUserConstraintType(userConstraintType int) {{
	C.{0}SetUserConstraintType(this.handle, C.int(userConstraintType))
}}

//UNTESTED
func (this {2}) SetUserConstraintId(uid int) {{
	C.{0}SetUserConstraintId(this.handle, C.int(uid))
}}

//UNTESTED
func (this {2}) GetUserConstraintId() int {{
	return int(C.{0}GetUserConstraintId(this.handle))
}}

//UNTESTED
func (this {2}) SetUserConstraintPtr(ptr *interface{{}}) {{
	C.{0}SetUserConstraintPtr(this.handle, unsafe.Pointer(ptr))
}}

//UNTESTED
func (this {2}) GetUserConstraintPtr() *interface{{}}{{
	return (*interface{{}})(C.{0}GetUserConstraintPtr(this.handle))
}}

//UNTESTED
func (this {2}) GetUid() int {{
	return int(C.{0}GetUid(this.handle))
}}

//UNTESTED
func (this {2}) NeedsFeedback() bool {{
	return bool(C.{0}NeedsFeedback(this.handle))
}}

//UNTESTED
func (this {2}) EnableFeedback(needsFeedback bool) {{
	C.{0}EnableFeedback(this.handle, C.bool(needsFeedback))
}}

//UNTESTED
func (this {2}) GetAppliedImpulse() float32 {{
	return float32(C.{0}GetAppliedImpulse(this.handle))
}}

/*
//UNTESTED
func (this {2}) SetJointFeedback(jointFeedback btJointFeedback*) {{
	C.{0}SetJointFeedback(this.handle)
}}

//UNTESTED
func (this {2}) GetJointFeedback() btJointFeedback {{
	return btJointFeedback(C.{0}GetJointFeedback(this.handle))
}}

//UNTESTED
func (this {2}) GetConstraintType() btTypedConstraintType {{
	return btTypedConstraintType(C.{0}GetConstraintType(this.handle))
}}
*/


'''


names=['Point2PointConstraint', 'HingeConstraint', 'ConeTwistConstraint','Generic6DofConstraint', 'SliderConstraint']
f = open('autogenerated.go', 'w+')

f.write(goheader)
for name in names:
	f.write(constraintcommongo.format('pl'+name, 'bt'+name, name))